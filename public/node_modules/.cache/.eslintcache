[{"C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\index.js":"1","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\Body.js":"2","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\Navbar.js":"3","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\SignInSide.js":"4","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\reportWebVitals.js":"5","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\App.js":"6","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\Header.js":"7","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\AddNew.js":"8","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\EmployeeForm.js":"9"},{"size":876,"mtime":1629218674676,"results":"10","hashOfConfig":"11"},{"size":7374,"mtime":1629714669839,"results":"12","hashOfConfig":"11"},{"size":1121,"mtime":1629219068992,"results":"13","hashOfConfig":"11"},{"size":4082,"mtime":1629219095130,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"11"},{"size":8978,"mtime":1629714659028,"results":"16","hashOfConfig":"11"},{"size":1045,"mtime":1629219045442,"results":"17","hashOfConfig":"11"},{"size":1316,"mtime":1629218817980,"results":"18","hashOfConfig":"11"},{"size":3728,"mtime":1629714685035,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"kzs3gr",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\index.js",["43"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Body from './components/Body';\nimport SignInSide from './components/SignInSide';\nimport { BrowserRouter as Router, Route,Switch,withRouter} from \"react-router-dom\";\nimport Navbar from './components/Navbar';\n\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={SignInSide} />\n      <Route path=\"/employeestable\" component={Navbar} />\n      <Route path=\"/chart\" component={Body} />\n      <Route />\n      <Route />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\Body.js",["44","45","46","47"],"import React, { useState, useEffect } from 'react'\r\nimport \"antd/dist/antd.css\";\r\nimport {Bar, Doughnut, Line, Pie} from 'react-chartjs-2';\r\nimport { Modal, Row, Col } from 'antd';\r\nimport { Card } from 'antd';\r\nimport barchart from \"../images/barChart.png\";\r\nimport linechart from \"../images/line-graph.png\"\r\nimport doughnutchart from \"../images/doughnutchart.png\";\r\n// import { BASE_API_URL } from \"../utils/constants.js\";\r\nimport axios from \"axios\";\r\nimport \"./Body.css\"\r\nimport Header from \"./Header\";\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction Body() {\r\n\r\n  const [visible1, setVisible1] = React.useState(false);\r\n  const [visible2, setVisible2] = React.useState(false);\r\n  const [visible3, setVisible3] = React.useState(false);\r\n\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const [modalText, setModalText] = React.useState('Content of the modal');\r\n\r\n  const [datas, setData] = useState([]);\r\n  var ageArray = [];\r\n  var countryArray = [];\r\n  var uniqueCountries = [];\r\n  var countOfCountries = [];\r\n  var count_China = 0;\r\n  var count_Brazil = 0;\r\n  var count_Japan = 0;\r\n  var count_Columbia = 0;\r\n  var count_Argentina = 0;\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/get\")\r\n    .then((res) => {\r\n        setData(res.data.recordset);\r\n    })\r\n    .catch((err) => console.log(err))\r\n  }, []);\r\n\r\n\r\n  datas.forEach(function(data) {\r\n    ageArray.push(data.age);\r\n    countryArray.push(data.country)\r\n});\r\n\r\nuniqueCountries = [...new Set(countryArray)]\r\n\r\nconst countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n\r\ncount_China = countOccurrences(countryArray, \"China\")\r\ncount_Brazil = countOccurrences(countryArray, \"Brazil\")\r\ncount_Japan = countOccurrences(countryArray, \"Japan\")\r\ncount_Columbia = countOccurrences(countryArray, \"Columbia\")\r\ncount_Argentina = countOccurrences(countryArray, \"Argentina\")\r\n\r\ncountOfCountries.push(count_China)\r\ncountOfCountries.push(count_Brazil)\r\ncountOfCountries.push(count_Japan)\r\ncountOfCountries.push(count_Columbia)\r\ncountOfCountries.push(count_Argentina)\r\n\r\nconst state = {\r\n    labels: uniqueCountries,\r\n    datasets: [\r\n        {\r\n            label: 'Average Age',\r\n            backgroundColor: 'rgba(75,192,192,1)',\r\n            borderColor: 'rgba(0,0,0,1)',\r\n            borderWidth: 2,\r\n            data: ageArray\r\n        }\r\n    ]\r\n}\r\n\r\nconst statePie = {\r\n    labels: [\"China\", \"Brazil\", \"Japan\", \"Columbia\", \"Argentina\"],\r\n    datasets: [\r\n      {\r\n        label: 'Age',\r\n        backgroundColor: [\r\n          '#B21F00',\r\n          '#C9DE00',\r\n          '#2FDE00',\r\n          '#00A6B4',\r\n          '#6800B4'\r\n        ],\r\n        hoverBackgroundColor: [\r\n        '#501800',\r\n        '#4B5000',\r\n        '#175000',\r\n        '#003350',\r\n        '#35014F'\r\n        ],\r\n        data: countOfCountries\r\n      }\r\n    ]\r\n  }\r\n  \r\n  const showModal = () => {\r\n    setVisible1(true);\r\n  };\r\n\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible1(false);\r\n  };\r\n\r\n  const showModal2 = () => {\r\n    setVisible2(true);\r\n  };\r\n\r\n\r\n  const handleCancel2 = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible2(false);\r\n  };\r\n\r\n  const showModal3 = () => {\r\n    setVisible3(true);\r\n  };\r\n\r\n\r\n  const handleCancel3 = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible3(false);\r\n  };\r\n\r\n  \r\n  \r\n  return (\r\n        <>\r\n        <Header />\r\n        <div>\r\n          <>\r\n          <Row type=\"flex\">\r\n            <div className=\"card-1\" onClick={showModal}>\r\n            <Col span={6} order={7}>\r\n            <Card\r\n            hoverable\r\n            style={{ width: 280, height: 330, backgroundColor: \"#2B2B2B\"}}\r\n            cover={<img style={{paddingTop: 20, paddingRight: 20, paddingLeft: 20, paddingBottom: 2}} alt=\"Bar Chart\" src={barchart} />}\r\n            >\r\n            {/* <Tag style={{backgroundColor: \"#2B2B2B\" }} color=\"geekblue\"><span style={{fontSize: 20}}><strong>Full Time</strong></span></Tag> */}\r\n            <Meta title={<span style={{color: \"whitesmoke\", fontSize: 20 }}><strong>Bar Chart</strong></span>} />\r\n            </Card>\r\n            </Col>\r\n            </div>\r\n            <Modal\r\n        title=\"Bar Chart\"\r\n        visible={visible1}\r\n        // onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        footer = {null}\r\n      >\r\n        <Bar\r\n            data={state}\r\n            options={{\r\n                title:{\r\n                display:true,\r\n                text:'Average age',\r\n                fontSize:20\r\n            },\r\n            legend:{\r\n                display:true,\r\n                position:'right'\r\n            } \r\n        }}\r\n        />\r\n      </Modal>\r\n\r\n            \r\n            <div className=\"card-2\">\r\n            <Col span={6} order={6} onClick={showModal2}>\r\n            <Card\r\n            hoverable\r\n            style={{ width: 280, height: 330, backgroundColor: \"#2B2B2B\" }}\r\n            cover={<img style={{paddingTop: 20, paddingRight: 20, paddingLeft: 20, paddingBottom: 2}} alt=\"Line Chart\" src={linechart} />}\r\n            >\r\n            {/* <Tag style={{backgroundColor: \"#2B2B2B\" }} color=\"geekblue\"><span style={{fontSize: 20}}><strong>Full Time</strong></span></Tag> */}\r\n            <Meta title={<span style={{color: \"whitesmoke\", fontSize: 20 }}><strong>Line Chart</strong></span>} />\r\n            </Card>\r\n            </Col>\r\n            </div>\r\n\r\n            <Modal\r\n        title=\"Line Chart\"\r\n        visible={visible2}\r\n        // onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel2}\r\n        footer = {null}\r\n      >\r\n        <Line\r\n            data={state}\r\n            options={{\r\n                title:{\r\n                display:true,\r\n                text:'Average age',\r\n                fontSize:20\r\n            },\r\n            legend:{\r\n                display:true,\r\n                position:'right'\r\n            } \r\n        }}\r\n        />\r\n      </Modal>\r\n            \r\n\r\n            <div className=\"card-3\">\r\n            <Col span={6} order={5} onClick={showModal3}>\r\n            <Card\r\n            hoverable\r\n            style={{ width: 280, height: 330, backgroundColor: \"#2B2B2B\" }}\r\n            cover={<img style={{paddingTop: 20, paddingRight: 20, paddingLeft: 20, paddingBottom: 2}} alt=\"Doughnut Chart\" src={doughnutchart} />}\r\n            >\r\n            {/* <Tag style={{backgroundColor: \"#2B2B2B\" }} color=\"geekblue\"><span style={{fontSize: 20}}><strong>Full Time</strong></span></Tag> */}\r\n            <Meta title={<span style={{color: \"whitesmoke\", fontSize: 20 }}><strong>Doughnut Chart</strong></span>} />\r\n            </Card>\r\n            </Col>\r\n            </div>\r\n\r\n            <Modal\r\n        title=\"Doughnut Chart\"\r\n        visible={visible3}\r\n        // onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel3}\r\n        footer = {null}\r\n      >\r\n        <Doughnut\r\n            data={statePie}\r\n            options={{\r\n                title:{\r\n                display:true,\r\n                text:'Age',\r\n                fontSize:20\r\n            },\r\n            legend:{\r\n                display:true,\r\n                position:'right'\r\n            } \r\n        }}\r\n        />\r\n      </Modal>\r\n            </Row>\r\n          </>   \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Body","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\Navbar.js",[],"C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\SignInSide.js",[],"C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\reportWebVitals.js",[],"C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\App.js",["48","49","50","51","52","53","54","55","56","57","58"],"import React, { useState, useEffect } from \"react\";\nimport AddNew from \"./components/AddNew\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"antd/dist/antd.css\";\nimport { Table, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport './App.css';\nimport axios from \"axios\";\nimport { Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n// import { BASE_API_URL } from \"./utils/constants\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const [first_name, setFirstName] = useState('');\n  const [last_name, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [gender, setGender] = useState('');\n  const [country, setCountry] = useState('');\n\n\n  useEffect(() => {\n    axios.get(\"/api/get\")\n      .then((res) => {\n        setData(res.data.recordset);\n      })\n      .catch((err) => console.log(err))\n  }, []);\n\n\n  const deleteEmployee = (first_name) => {\n    axios.delete(`/api/delete/${first_name}`);\n\n    setData(data.filter((val) => {\n      return val.first_name !== first_name;\n    }));\n  }\n\n  const updateEmployee = (id) => {\n    axios.put(\"/api/update\", {\n      id: id,\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      gender: gender,\n      country: country\n    });\n\n    setData(data.map((val) => {\n      return val.first_name === first_name ? {\n        first_name: val.first_name, \n        last_name: last_name,\n        email: email,\n        gender: gender,\n        country: country\n      }\n      :val\n    }));\n  };\n\n\n  function getColumnSearchProps(dataIndex) {\n    return {\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            // ref={node => {\n            //   this.searchInput = node;\n            // }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n              icon={<SearchOutlined />}\n              size=\"small\"\n              style={{ width: 90 }}\n            >\n              Search\n            </Button>\n            <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n              Reset\n            </Button>\n          </Space>\n        </div>\n      ),\n      filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n      onFilter: (value, record) =>\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          // setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text =>\n        searchedColumn === dataIndex ? (\n          <Highlighter\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n            searchWords={[searchText]}\n            autoEscape\n            textToHighlight={text.toString()}\n          />\n        ) : (\n          text\n        ),\n    }\n  };\n\n  function handleSearch(selectedKeys, confirm, dataIndex) {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  function handleReset(clearFilters) {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const EditableCell = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n  }) => {\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item\n            name={dataIndex}\n            style={{\n              margin: 0,\n            }}\n            rules={[\n              {\n                required: true,\n                message: `Please Input ${title}!`,\n              },\n            ]}\n          >\n            {inputNode}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n\n  const [form] = Form.useForm();\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = (record) => record.id === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      first_name: '',\n      last_name: '',\n      email: '',\n      gender: '',\n      country: '',\n      ...record,\n    });\n    setEditingKey(record.id);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async (id) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex((item) => id === item.id);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n    // updateEmployee(id);\n  };\n  \n  \n  const columns = [\n    {\n      title: 'first_name',\n      dataIndex: 'first_name',\n      // key: 'first_name',\n      editable: true,\n      sorter: {\n        compare: (a, b) => a.first_name.localeCompare(b.first_name),\n        multiple: 1,\n      },\n      ...getColumnSearchProps('first_name'),\n    },\n    {\n      title: 'last_name',\n      dataIndex: 'last_name',\n      // key: 'last_name',\n      editable: true,\n      sorter: {\n        compare: (a, b) => a.last_name.localeCompare(b.last_name),\n        multiple: 2,\n      },\n      ...getColumnSearchProps('last_name'),\n    },\n    {\n      title: 'email',\n      dataIndex: 'email',\n      // key: 'email',\n      editable: true,\n      ...getColumnSearchProps('email'),\n    },\n    {\n      title: 'gender',\n      dataIndex: 'gender',\n      // key: 'gender',\n      editable: true,\n      ...getColumnSearchProps('gender'),\n    },\n    // {\n    //   title: 'Age',\n    //   dataIndex: 'age',\n    //   key: 'age',\n    //   ...getColumnSearchProps('age'),\n    // },\n    {\n      title: 'country',\n      dataIndex: 'country',\n      // key: 'country',\n      editable: true,\n      ...getColumnSearchProps('country'),\n    },\n    {\n      title: 'update',\n      dataIndex: 'update',\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <a\n              href=\"javascript:;\"\n              onClick={() => save(record.id)}\n              // onClick={() => {updateEmployee(record.first_name)}}\n              style={{\n                marginRight: 8,\n              }}\n            >\n              Save\n            </a>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a>Cancel</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n            Edit\n          </Typography.Link>\n        );\n      },\n    },\n    {\n      title: 'action',\n      dataIndex: '',\n      key: 'x',\n      render: (text, record) => (\n        <a onClick={() => {deleteEmployee(record.first_name)}}><span style={{color:\"red\"}}>Delete</span></a>\n      ),\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n\n\n  return (\n    <>\n    <div style={{display: \"flex\", flexDirection: \"row\"}}>\n      <div style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n      <Form form={form} component={false}>\n      <Table \n      className=\"effect8\"\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      dataSource={data} \n      columns={mergedColumns} \n      // searchableProps={{fuzzySearch:true}} \n      // exportable \n      pagination={{\n        onChange: cancel,\n      }}\n      scroll={{y:400}}\n      bordered\n      rowClassName=\"editable-row\"\n      rowClassName={(record, index) => index%2 === 0 ? 'table-row-light' : 'table-row-dark'}\n      />\n      </Form>\n      </div>\n      <div>\n        <AddNew />\n      </div>\n      <div>\n        <Link to=\"/chart\">\n        <button style={{backgroundColor: \"orangered\", marginRight: 20}} type=\"submit\"><span style={{color: \"white\"}}>Go to Charts</span></button>\n        </Link>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\Header.js",[],"C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\AddNew.js",["59","60"],"import React from 'react'\r\nimport { Modal, Button } from 'antd';\r\nimport { UserAddOutlined } from '@ant-design/icons';\r\nimport EmployeeForm from './EmployeeForm';\r\nimport \"./AddNew.css\";\r\n\r\nfunction AddNew() {\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n    const [modalText, setModalText] = React.useState('Content of the modal');\r\n  \r\n    const showModal = () => {\r\n      setVisible(true);\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      setModalText('Adding...');\r\n      setConfirmLoading(true);\r\n      setTimeout(() => {\r\n        setVisible(false);\r\n        setConfirmLoading(false);\r\n      }, 2000);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      console.log('Clicked cancel button');\r\n      setVisible(false);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Button style={{background: \"orange\", marginRight: 50}} type=\"primary\" onClick={showModal}>\r\n        <UserAddOutlined /> Add \r\n        </Button>\r\n        <Modal\r\n          title=\"Employee Form\"\r\n          visible={visible}\r\n          // onOk={handleOk}\r\n          confirmLoading={confirmLoading}\r\n          onCancel={handleCancel}\r\n          footer={null}\r\n        >\r\n          <EmployeeForm />\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AddNew\r\n","C:\\Users\\hemag\\OneDrive\\Desktop\\Azure\\design-antd\\client\\src\\components\\EmployeeForm.js",["61","62","63"],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction EmployeeForm() {\r\n\r\n  const [first_name, setFirstName] = useState('');\r\n  const [last_name, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [country, setCountry] = useState('');\r\n\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/get\")\r\n      .then((res) => {\r\n        setEmployeeList(res.data.recordset);\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }, [employeeList]);\r\n\r\n\r\n    const layout = {\r\n        labelCol: {\r\n            span: 8,\r\n        },\r\n        wrapperCol: {\r\n            span: 16,\r\n        },\r\n    };\r\n\r\n\r\n    const validateMessages = {\r\n        required: '${label} is required!',\r\n        types: {\r\n            email: '${label} is not a valid email!',\r\n            // number: '${label} is not a valid number!',\r\n        },\r\n        // number: {\r\n        //     range: '${label} must be between ${min} and ${max}',\r\n        // },\r\n    };\r\n\r\n      const onFinish = (values) => {\r\n        console.log(values);\r\n    };\r\n\r\n    const submitForm = () => {\r\n      axios.post(\"/api/insert\", {\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        email: email,\r\n        gender: gender,\r\n        age: age,\r\n        country: country\r\n      });\r\n\r\n      setEmployeeList([\r\n        ...employeeList,\r\n        {first_name: first_name, last_name: last_name, email: email, gender: gender, age: age, country: country}\r\n      ]);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n        <Form.Item\r\n          name={['user', 'firstName']}\r\n          label=\"First Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input onChange={(e) => {\r\n            setFirstName(e.target.value);\r\n          }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={['user', 'lastName']}\r\n          label=\"Last Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input onChange={(e) => {\r\n            setLastName(e.target.value)\r\n          }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={['user', 'email']}\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n            },\r\n          ]}\r\n        >\r\n          <Input onChange={(e) => {\r\n            setEmail(e.target.value)\r\n          }} />\r\n        </Form.Item>\r\n        {/* <Form.Item\r\n          name={['user', 'age']}\r\n          label=\"Age\"\r\n        >\r\n          <Input onChange={(e) => {\r\n            setAge(e.target.value)\r\n          }} />\r\n        </Form.Item> */}\r\n        <Form.Item\r\n          name={['user', 'gender']}\r\n          label=\"Gender\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input onChange={(e) => {\r\n            setGender(e.target.value)\r\n          }} />\r\n        </Form.Item>\r\n        <Form.Item name={['user', 'country']} label=\"Country\">\r\n          <Input onChange={(e) => {\r\n            setCountry(e.target.value)\r\n          }} />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button style={{backgroundColor: \"orange\"}} type=\"primary\" htmlType=\"submit\" onClick={submitForm}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n      </Form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default EmployeeForm\r\n",{"ruleId":"64","severity":1,"message":"65","line":7,"column":48,"nodeType":"66","messageId":"67","endLine":7,"endColumn":58},{"ruleId":"64","severity":1,"message":"68","line":3,"column":30,"nodeType":"66","messageId":"67","endLine":3,"endColumn":33},{"ruleId":"64","severity":1,"message":"69","line":23,"column":26,"nodeType":"66","messageId":"67","endLine":23,"endColumn":43},{"ruleId":"64","severity":1,"message":"70","line":24,"column":10,"nodeType":"66","messageId":"67","endLine":24,"endColumn":19},{"ruleId":"64","severity":1,"message":"71","line":24,"column":21,"nodeType":"66","messageId":"67","endLine":24,"endColumn":33},{"ruleId":"64","severity":1,"message":"72","line":19,"column":22,"nodeType":"66","messageId":"67","endLine":19,"endColumn":34},{"ruleId":"64","severity":1,"message":"73","line":20,"column":21,"nodeType":"66","messageId":"67","endLine":20,"endColumn":32},{"ruleId":"64","severity":1,"message":"74","line":21,"column":17,"nodeType":"66","messageId":"67","endLine":21,"endColumn":25},{"ruleId":"64","severity":1,"message":"75","line":22,"column":18,"nodeType":"66","messageId":"67","endLine":22,"endColumn":27},{"ruleId":"64","severity":1,"message":"76","line":23,"column":19,"nodeType":"66","messageId":"67","endLine":23,"endColumn":29},{"ruleId":"64","severity":1,"message":"77","line":43,"column":9,"nodeType":"66","messageId":"67","endLine":43,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":266,"column":13,"nodeType":"80","endLine":273,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":267,"column":20,"nodeType":"83","messageId":"84","endLine":267,"endColumn":34},{"ruleId":"78","severity":1,"message":"85","line":277,"column":15,"nodeType":"80","endLine":277,"endColumn":18},{"ruleId":"78","severity":1,"message":"85","line":292,"column":9,"nodeType":"80","endLine":292,"endColumn":64},{"ruleId":"86","severity":1,"message":"87","line":338,"column":7,"nodeType":"88","messageId":"89","endLine":338,"endColumn":93},{"ruleId":"64","severity":1,"message":"70","line":10,"column":12,"nodeType":"66","messageId":"67","endLine":10,"endColumn":21},{"ruleId":"64","severity":1,"message":"90","line":16,"column":11,"nodeType":"66","messageId":"67","endLine":16,"endColumn":19},{"ruleId":"64","severity":1,"message":"91","line":12,"column":15,"nodeType":"66","messageId":"67","endLine":12,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":37,"column":19,"nodeType":"83","messageId":"94","endLine":37,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":39,"column":20,"nodeType":"83","messageId":"94","endLine":39,"endColumn":52},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Pie' is defined but never used.","'setConfirmLoading' is assigned a value but never used.","'modalText' is assigned a value but never used.","'setModalText' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setGender' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'updateEmployee' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'handleOk' is assigned a value but never used.","'setAge' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","unexpectedTemplateExpression"]